var Iterable=function(){"use strict";const t=Symbol.iterator,n=t=>"function"==typeof t,r=t=>null==t,e=e=>!r(e)&&n(e[t]);class i extends TypeError{constructor(t,n,r){super(),this.message=`bad argument #${t} to ${n} (${r} expected)`}}const s=(t,n,r)=>{if(!e(t))throw new i(n,r,"Iterable")},o=(t,r,e)=>{if(!n(t))throw new i(r,e,"function")},c=(t,n,r)=>{if(!(t=>"number"==typeof t)(t))throw new i(n,r,"number")},u=(t,n,r)=>{if(c(t,n,r),t<0)throw new i(n,r,"positive number")},a=(t,n,r)=>{s(t,1,r),o(n,2,r)},f=(t,n,r)=>{s(t,1,r),u(n,2,r)},l=(t,n,r)=>{s(t,1,r),s(n,2,r)},h=t=>`Iterable.${t}`,d=h("all");var y=(t,n)=>(a(t,n,d),new Bn(function*(){for(const r of t)if(!n(r))return void(yield!1);yield!0}));const p=h("any");var v=(t,n)=>(a(t,n,p),new Bn(function*(){for(const r of t)if(n(r))return void(yield!0);yield!1}));const w=h("average");var m=t=>(s(t,w),new Bn(function*(){let n=0,r=0;for(const e of t)n+=e,r+=1;yield n/r}));const k=h("breadthFirst");var g=t=>(s(t,1,k),new Bn(function*(){const n=[];for(n.push(t);0!==n.length;){const t=n.shift();if(e(t))for(const r of t)n.push(r);else yield t}}));const b=h("takeUntil");var W=(t,n)=>(a(t,n,b),new Bn(function*(){for(const r of t){if(n(r))return;yield r}}));const A=h("skipUntil");var x=(t,n)=>(a(t,n,A),new Bn(function*(){let r=!0;for(const e of t)r&&(r=!n(e)),r||(yield e)}));const I=h("breakWith");var E=(t,n)=>(a(t,n,I),[W(t,n),x(t,n)]);const J=h("buffer");var F=(t,n)=>(f(t,n,J),new Bn(function*(){let r=[];for(const e of t)r.push(e),r.length===n&&(yield r,r=[]);r.length>0&&(yield r)}));const M=h("cache");var L=t=>{s(t,1,M);const n=[];let r=0;return new Bn(function*(){if(r>0)for(const t of n)yield t;let e=r;for(const i of t)0===e?(n.push(i),r+=1,yield i):e-=1})};const R=h("compose");var U=(t,...n)=>{s(t,1,R);let r=1,i=t;for(const t of n)if(o(t,r+=1,R),i=t(i),!e(i))throw new TypeError("Iterable.compose: a composer function returned a non-Iterable.");return i instanceof Bn?i:new Bn(i)};const $=h("flat");var j=t=>(s(t,1,$),new Bn(function*(){for(const n of t)if(e(n))for(const t of n)yield t;else yield n})),S=(...t)=>j(new Bn(t));const q=h("flatMap");var z=(t,n)=>(a(t,n,q),new Bn(function*(){for(const r of t)yield n(r)}));const D=h("find");var N=(t,n)=>(a(t,n,D),new Bn(function*(){let r=0;for(const e of t){if(n(e))return void(yield r);r+=1}yield-1}));const O=h("indexOf");var Y=(t,n)=>(s(t,1,O),N(t,t=>t===n));const G=h("contains");var T=(t,n)=>(s(t,1,G),z(Y(t,n),t=>t>-1));const P=h("count");var B=t=>(s(t,1,P),new Bn(function*(){let n=0;for(const r of t)n+=1;yield n}));const C=h("defaultIfEmpty");var H=(t,n)=>(s(t,1,C),new Bn(function*(){let r=!0;for(const n of t)yield n,r=!1;r&&(yield n)}));const K=h("depthFirst");var Q=t=>(s(t,1,K),new Bn(function*(){const n=[];n.push(t);const r=[];for(;0!==n.length;){const t=n.pop();if(e(t))for(const r of t)n.push(r);else r.push(t)}for(const t of r.reverse())yield t}));const V=h("toArray");var X=t=>{s(t,1,V);const n=[];for(const r of t)n.push(r);return n};const Z=h("diff");var _=(t,n)=>(l(t,n,Z),new Bn(function*(){const r=X(t),e=X(n);for(const t of r)e.includes(t)||(yield t)}));const tt=h("distinct");var nt=t=>(s(t,1,tt),new Bn(function*(){const n=[];for(const r of t)n.includes(r)||(yield r),n.push(r)}));const rt=h("distinctAdjacent");var et=t=>(s(t,1,rt),new Bn(function*(){let n,r=!0;for(const e of t)r?(yield e,r=!1):n!==e&&(yield e),n=e}));const it=h("elementAt");var st=(t,n)=>(f(t,n,it),new Bn(function*(){let r=0;for(const e of t){if(r===n)return void(yield e);r+=1}})),ot=()=>new Bn([]);const ct=h("equal");var ut=(t,n)=>(l(t,n,ct),new Bn(function*(){const r=X(t);for(const t of n)if(t!==r.shift())return void(yield!1);yield 0===r.length}));const at=h("filter");var ft=(t,n)=>(a(t,n,at),new Bn(function*(){for(const r of t)n(r)&&(yield r)}));const lt=h("first"),ht=()=>!0;var dt=(t,n)=>{s(t,1,lt);let e=n;return r(e)?e=ht:o(n,2,lt),new Bn(function*(){for(const n of t)if(e(n))return void(yield n)})};const yt=h("flatMap");var pt=(t,n)=>(a(t,n,yt),j(z(t,n)));const vt=h("innerJoin");var wt=(t,n)=>(l(t,n,vt),new Bn(function*(){const r=X(t),e=X(n);for(const t of r)e.includes(t)&&(yield t);for(const t of e)r.includes(t)&&(yield t)}));const mt=h("intercalate");var kt=(t,n)=>(l(t,n,mt),new Bn(function*(){const r=[];let e;for(const i of t){r.push(i),e=r.slice(0);for(const t of n)r.push(t)}for(const t of e)yield t}));const gt=h("intersect");var bt=(t,n)=>(l(t,n,gt),new Bn(function*(){const r=X(t),e=X(n);for(const t of r)e.includes(t)&&(yield t)}));const Wt=h("intersperse");var At=(t,n)=>(s(t,1,Wt),new Bn(function*(){const r=[];let e;for(const i of t)r.push(i),e=r.slice(0),r.push(n);for(const t of e)yield t}));const xt=h("isEmpty");var It=t=>(s(t,1,xt),new Bn(function*(){for(const n of t)return void(yield!1);yield!0})),Et=t=>new Bn([t]);const Jt=h("last"),Ft=()=>!0;var Mt=(t,n)=>{s(t,1,Jt);let e=n;return r(e)?e=Ft:o(n,2,Jt),new Bn(function*(){let n;for(const r of t)e(r)&&(n=r);yield n})};const Lt=h("leftJoin");var Rt=(t,n)=>(l(t,n,Lt),new Bn(function*(){const r=X(t),e=X(n);for(const t of r)yield t;for(const t of e)r.includes(t)&&(yield t)}));const{max:Ut}=Math,$t=h("max");var jt=t=>(s(t,$t),new Bn(function*(){let n;for(const e of t)n=r(n)?e:Ut(n,e);yield n}));const{min:St}=Math,qt=h("min");var zt=t=>(s(t,qt),new Bn(function*(){let n;for(const e of t)n=r(n)?e:St(n,e);yield n}));const Dt=h("onDone");var Nt=(t,n)=>(a(t,n,Dt),new Bn(function*(){for(const n of t)yield n;n()}));const Ot=h("onStart");var Yt=(t,n)=>(a(t,n,Ot),new Bn(function*(){n();for(const n of t)yield n}));const Gt=h("onYield");var Tt=(t,n)=>(a(t,n,Gt),new Bn(function*(){for(const r of t)n(r),yield r}));const Pt=h("outerJoin");var Bt=(t,n)=>(l(t,n,Pt),new Bn(function*(){const r=X(t),e=X(n);for(const t of r)e.includes(t)||(yield t);for(const t of e)r.includes(t)||(yield t)}));const Ct=h("partition");var Ht=(t,n)=>(a(t,n,Ct),[ft(t,n),ft(t,t=>!n(t))]);const Kt=h("range"),Qt=(t,n,e)=>{c(t,1,Kt),c(n,2,Kt);let i=e;return r(e)?i=1:c(e,3,Kt),new Bn(function*(){const r=i*Math.sign(n-t);for(let e=t;r<0?e>=n:e<=n;e+=r)yield e})},Vt=h("reduce");var Xt=(t,n,r)=>(a(t,n,Vt),new Bn(function*(){let e=r,i=null==r;for(const r of t)i?(e=r,i=!1):e=n(e,r);yield e}));const Zt=h("reverse");var _t=t=>(s(t,1,Zt),new Bn(function*(){const n=[];for(const r of t)n.unshift(r);for(const t of n)yield t}));const tn=h("reduceRight");var nn=(t,n,r)=>(a(t,n,tn),Xt(_t(t),n,r));const rn=h("repeat");var en=(t,n)=>(f(t,n,rn),new Bn(function*(){for(let r=n;r>0;r-=1)for(const n of t)yield n}));const sn=h("replace");var on=(t,n,r)=>(f(t,n,sn),new Bn(function*(){let e=0;for(const i of t)e===n?yield r:yield i,e+=1}));const cn=h("scan");var un=(t,n,r)=>(a(t,n,cn),new Bn(function*(){let e=r,i=null==r;for(const r of t)i?(e=r,i=!1):e=n(e,r),yield e}));const an=h("scanRight");var fn=(t,n,r)=>(a(t,n,an),un(_t(t),n,r));const ln=h("skip");var hn=(t,n)=>(f(t,n,ln),new Bn(function*(){let r=n;for(const n of t)r>0?r-=1:yield n}));const dn=h("skipLast");var yn=(t,n)=>(f(t,n,dn),new Bn(function*(){const r=[];let e=0;for(const i of t)n>0?(r.push(i),e===n?yield r.shift():e+=1):yield i}));const pn=h("skipWhile");var vn=(t,n)=>(a(t,n,pn),new Bn(function*(){let r=!0;for(const e of t)r&&(r=n(e)),r||(yield e)}));const wn=h("take");var mn=(t,n)=>(f(t,n,wn),new Bn(function*(){let r=n;for(const n of t){if(!(r>0))return;r-=1,yield n}}));const kn=h("slice");var gn=(t,n,r)=>(s(t,1,kn),u(n,2,kn),u(r,3,kn),hn(mn(t,r),n));const bn=h("sort"),Wn=(t,n)=>t-n;var An=(t,n)=>{s(t,1,bn);let e=n;return r(e)?e=Wn:o(n,2,bn),new Bn(X(t).sort(e))};const xn=h("sorted"),In=(t,n)=>t-n;var En=(t,n)=>{s(t,1,xn);let e=n;return r(e)?e=In:o(n,2,xn),new Bn(function*(){let n;for(const r of t){if(void 0!==n&&e(n,r)>0)return void(yield!1);n=r}yield!0})};const Jn=h("takeWhile");var Fn=(t,n)=>(a(t,n,Jn),new Bn(function*(){for(const r of t){if(!n(r))return;yield r}}));const Mn=h("spanWith");var Ln=(t,n)=>(a(t,n,Mn),[Fn(t,n),vn(t,n)]);const Rn=h("split");var Un=(t,n)=>(f(t,n,Rn),[mn(t,n),hn(t,n)]);const $n=h("startWith");var jn=(t,...n)=>(s(t,1,$n),S(...n,t));const Sn=h("step");var qn=(t,n)=>(f(t,n,Sn),new Bn(function*(){if(n<1)return;let r=0;for(const e of t)r%n==0&&(yield e),r+=1}));const zn=h("sum");var Dn=t=>(s(t,zn),new Bn(function*(){let n=0;for(const r of t)n+=r;yield n}));const Nn=h("takeLast");var On=(t,n)=>(f(t,n,Nn),new Bn(function*(){if(0===n)return;const r=[];for(const n of t)r.push(n);for(const t of r.slice(-n))yield t}));const Yn=h("zip"),Gn=t=>t,Tn=(t,e)=>{if(!(t instanceof Array))throw new i(1,Yn,"Array");let s=e;return r(e)?s=Gn:n(e)||o(e,2,Yn),new Bn(function*(){const n=[];for(const e of t){let t=0;for(const i of e){let e=n[t];r(e)&&(e=[],n[t]=e),e.push(i),t+=1}}for(const t of n)yield s(t)})},{isNaN:Pn}=Number;class Bn{constructor(n){const s=n,o=!r(s);if(o&&"GeneratorFunction"===s.constructor.name)s[t]=s,this.it=s;else{if(!o||!e(s))throw new i(1,"Iterable.<constructor>","Iterable or Generator");this.it=s}return this.it=s,new Proxy(this,{get:(t,n)=>n in t&&t[n]||(Pn(n)?void 0:this.get(n))})}get(t){const{it:n}=this;let r=0;for(const e of n){if(`${r}`===t)return e;r+=1}}static is(t){return e(t)}static all(t,n){return y(t,n)}all(t){return y(this.it,t)}static any(t,n){return v(t,n)}any(t){return v(this.it,t)}static average(t){return m(t)}average(){return m(this.it)}static breadthFirst(t){return g(t)}breadthFirst(){return g(this.it)}static buffer(t,n){return F(t,n)}buffer(t){return F(this.it,t)}static breakWith(t,n){return E(t,n)}breakWith(t){return E(this.it,t)}static cache(t){return L(t)}cache(){return L(this.it)}static compose(t,...n){return U(t,...n)}compose(...t){return U(this.it,...t)}static concat(...t){return S(...t)}concat(...t){return S(this.it,...t)}static contains(t,n){return T(t,n)}contains(t){return T(this.it,t)}static count(t){return B(t)}count(){return B(this.it)}static defaultIfEmpty(t,n){return H(t,n)}defaultIfEmpty(t){return H(this.it,t)}static depthFirst(t){return Q(t)}depthFirst(){return Q(this.it)}static diff(t,n){return _(t,n)}diff(t){return _(this.it,t)}static distinct(t){return nt(t)}distinct(){return nt(this.it)}static distinctAdjacent(t){return et(t)}distinctAdjacent(){return et(this.it)}static elementAt(t,n){return st(t,n)}elementAt(t){return st(this.it,t)}static empty(){return ot()}ignoreElements(){return ot(this)}static equal(t,n){return ut(t,n)}equal(t){return ut(this.it,t)}static filter(t,n){return ft(t,n)}filter(t){return ft(this.it,t)}static find(t,n){return N(t,n)}find(t){return N(this.it,t)}static first(t,n){return dt(t,n)}first(t){return dt(this.it,t)}static flat(t){return j(t)}flat(){return j(this.it)}static flatMap(t,n){return pt(t,n)}flatMap(t){return pt(this.it,t)}static indexOf(t,n){return Y(t,n)}indexOf(t){return Y(this.it,t)}static innerJoin(t,n){return wt(t,n)}innerJoin(t){return wt(this.it,t)}static intercalate(t,n){return kt(t,n)}intercalate(t){return kt(this.it,t)}static intersect(t,n){return bt(t,n)}intersect(t){return bt(this.it,t)}static intersperse(t,n){return At(t,n)}intersperse(t){return At(this.it,t)}static isEmpty(t){return It(t)}isEmpty(){return It(this.it)}static just(t){return Et(t)}static last(t,n){return Mt(t,n)}last(t){return Mt(this.it,t)}static leftJoin(t,n){return Rt(t,n)}leftJoin(t){return Rt(this.it,t)}static map(t,n){return z(t,n)}map(t){return z(this.it,t)}static max(t){return jt(t)}max(){return jt(this.it)}static min(t){return zt(t)}min(){return zt(this.it)}static onDone(t,n){return Nt(t,n)}onDone(t){return Nt(this.it,t)}static onStart(t,n){return Yt(t,n)}onStart(t){return Yt(this.it,t)}static onYield(t,n){return Tt(t,n)}onYield(t){return Tt(this.it,t)}static outerJoin(t,n){return Bt(t,n)}outerJoin(t){return Bt(this.it,t)}static partition(t,n){return Ht(t,n)}partition(t){return Ht(this.it,t)}static range(t,n,r){return Qt(t,n,r)}static reduce(t,n,r){return Xt(t,n,r)}reduce(t,n){return Xt(this.it,t,n)}static reduceRight(t,n,r){return nn(t,n,r)}reduceRight(t,n){return nn(this.it,t,n)}static repeat(t,n){return en(t,n)}repeat(t){return en(this.it,t)}static replace(t,n,r){return on(t,n,r)}replace(t,n){return on(this.it,t,n)}static reverse(t){return _t(t)}reverse(){return _t(this.it)}static scan(t,n,r){return un(t,n,r)}scan(t,n){return un(this.it,t,n)}static scanRight(t,n,r){return fn(t,n,r)}scanRight(t,n){return fn(this.it,t,n)}static skip(t,n){return hn(t,n)}skip(t){return hn(this.it,t)}static skipLast(t,n){return yn(t,n)}skipLast(t){return yn(this.it,t)}static skipUntil(t,n){return x(t,n)}skipUntil(t){return x(this.it,t)}static skipWhile(t,n){return vn(t,n)}skipWhile(t){return vn(this.it,t)}static slice(t,n,r){return gn(t,n,r)}slice(t,n){return gn(this.it,t,n)}static sort(t,n){return An(t,n)}sort(t){return An(this.it,t)}static sorted(t,n){return En(t,n)}sorted(t){return En(this.it,t)}static spanWith(t,n){return Ln(t,n)}spanWith(t){return Ln(this.it,t)}static split(t,n){return Un(t,n)}split(t){return Un(this.it,t)}static startWith(t,...n){return jn(t,...n)}startWith(...t){return jn(this.it,...t)}static step(t,n){return qn(t,n)}step(t){return qn(this.it,t)}static sum(t){return Dn(t)}sum(){return Dn(this.it)}static take(t,n){return mn(t,n)}take(t){return mn(this.it,t)}static takeLast(t,n){return On(t,n)}takeLast(t){return On(this.it,t)}static takeUntil(t,n){return W(t,n)}takeUntil(t){return W(this.it,t)}static takeWhile(t,n){return Fn(t,n)}takeWhile(t){return Fn(this.it,t)}static toArray(t){return X(t)}toArray(){return X(this.it)}static zip(t,n){return Tn(t,n)}zip(t,n){return Tn([this.it,...t],n)}[t](){return this.it[t]()}}return Bn}();