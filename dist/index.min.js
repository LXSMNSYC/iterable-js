var Iterable=function(t){"use strict";const e=Symbol.iterator,r=t=>"function"==typeof t,n=t=>"number"==typeof t,i=t=>void 0===t,o=t=>!i(t)&&"function"==typeof t[e];class a extends TypeError{constructor(t,e,r){super(),this.message=`bad argument #${t} to ${e} (${r} expected)`}}const f=(t,e)=>{if(!o(t))throw new a(1,"Iterable.all","Iterable");if(!r(e))throw new a(2,"Iterable.all","function");return new R(function*(){for(const r of t)if(!e(r))return void(yield!1);yield!0})},l=(t,e)=>{if(!o(t))throw new a(1,"Iterable.any","Iterable");if(!r(e))throw new a(2,"Iterable.any","function");return new R(function*(){for(const r of t)if(e(r))return void(yield!0);yield!1})},s=(t,e)=>{if(!o(t))throw new a(1,"Iterable.takeUntil","Iterable");if(!r(e))throw new a(2,"Iterable.takeUntil","function");return new R(function*(){for(const r of t){if(e(r))return;yield r}})},u=(t,e)=>{if(!o(t))throw new a(1,"Iterable.skipUntil","Iterable");if(!r(e))throw new a(2,"Iterable.skipUntil","function");return new R(function*(){let r=!0;for(const n of t)r&&(r=!e(n)),r||(yield n)})},w=(t,e)=>{if(!o(t))throw new a(1,"Iterable.breakWith","Iterable");if(!r(e))throw new a(2,"Iterable.breakWith","function");return[s(t,e),u(t,e)]},c=t=>{if(!o(t))throw new a(1,"Iterable.cache","Iterable");const e=[];let r=0;return new R(function*(){if(r>0)for(const t of e)yield t;let n=r;for(const i of t)0===n?(e.push(i),r+=1,yield i):n-=1})},b=(t,...e)=>{if(!o(t))throw new a(1,"Iterable.compose","Iterable");let n=1,i=t;for(const t of e){if(n+=1,!r(t))throw new a(n,"Iterable.compose","function");if(i=t(i),!o(i))throw new TypeError("Iterable.compose: a composer function returned a non-Iterable.")}return i instanceof R?i:new R(i)},h=t=>{if(!o(t))throw new a(1,"Iterable.flat","Iterable");return new R(function*(){for(const e of t)if(o(e))for(const t of e)yield t;else yield e})},I=(...t)=>h(new R(t)),p=(t,e)=>{if(!o(t))throw new a(1,"Iterable.map","Iterable");if(!r(e))throw new a(2,"Iterable.map","function");return new R(function*(){for(const r of t)yield e(r)})},d=(t,e)=>{if(!o(t))throw new a(1,"Iterable.find","Iterable");if(!r(e))throw new a(2,"Iterable.find","function");return new R(function*(){let r=0;for(const n of t){if(e(n))return void(yield r);r+=1}yield-1})},y=(t,e)=>{if(!o(t))throw new TypeError("bad argument #1 to Iterable.indexOf (Iterable expected)");return d(t,t=>t===e)},m=(t,e)=>{if(!o(t))throw new a(1,"Iterable.contains","Iterable");return p(y(t,e),t=>t>-1)},k=t=>{if(!o(t))throw new a(1,"Iterable.count","Iterable");return new R(function*(){let e=0;for(const r of t)e+=1;yield e})},v=(t,e)=>{if(!o(t))throw new a(1,"Iterable.elementAt","Iterable");if(!n(e))throw new a(2,"Iterable.elementAt","number");if(e<0)throw new a(2,"Iterable.elementAt","positive number");return new R(function*(){let r=0;for(const n of t){if(r===e)return void(yield n);r+=1}})},W=()=>new R([]),g=(t,e)=>{if(!o(t))throw new a(1,"Iterable.filter","Iterable");if(!r(e))throw new a(2,"Iterable.filter","function");return new R(function*(){for(const r of t)e(r)&&(yield r)})},L=t=>{if(!o(t))throw new a(1,"Iterable.first","Iterable");return new R(function*(){for(const e of t)return void(yield e)})},x=(t,e)=>{if(!o(t))throw new a(1,"Iterable.flatMap","Iterable");if(!r(e))throw new a(2,"Iterable.flatMap","function");return h(p(t,e))},A=(t,e)=>{if(!o(t))throw new a(1,"Iterable.buffer","Iterable");if(!n(e))throw new a(2,"Iterable.buffer","number");if(e<=0)throw new a(2,"Iterable.buffer","positive number");return new R(function*(){let r=[];for(const n of t)r.push(n),r.length===e&&(yield r,r=[]);r.length>0&&(yield r)})},U=t=>{if(!o(t))throw new a(1,"Iterable.isEmpty","Iterable");return new R(function*(){for(const e of t)return void(yield!1);yield!0})},E=t=>new R([t]),M=t=>{if(!o(t))throw new a(1,"Iterable.last","Iterable");return new R(function*(){let e;for(const r of t)e=r;yield e})},S=(t,e)=>{if(!o(t))throw new a(1,"Iterable.onDone","Iterable");if(!r(e))throw new a(2,"Iterable.onDone","function");return new R(function*(){for(const e of t)yield e;e()})},z=(t,e)=>{if(!o(t))throw new a(1,"Iterable.onStart","Iterable");if(!r(e))throw new a(2,"Iterable.onStart","function");return new R(function*(){e();for(const e of t)yield e})},D=(t,e)=>{if(!o(t))throw new a(1,"Iterable.onYield","Iterable");if(!r(e))throw new a(2,"Iterable.onYield","function");return new R(function*(){for(const r of t)e(r),yield r})},N=(t,e)=>{if(!o(t))throw new a(1,"Iterable.partition","Iterable");if(!r(e))throw new a(2,"Iterable.partition","function");return[g(t,e),g(t,t=>!e(t))]},Y=(e,r,n)=>{if(!t.isNumber(e))throw new a(1,"Iterable.range","number");if(!t.isNumber(r))throw new a(2,"Iterable.range","number");let i=n;if(t.isUndefined(n))i=1;else if(!t.isNumber(n))throw new a(3,"Iterable.range","number or undefined");return new R(function*(){const t=i*Math.sign(r-e);for(let n=e;t<0?n>=r:n<=r;n+=t)yield n})},O=(t,e)=>{if(!o(t))throw new a(1,"Iterable.repeat","Iterable");if(!n(e))throw new a(2,"Iterable.repeat","number");if(e<0)throw new a(2,"Iterable.repeat","positive number");return new R(function*(){for(let r=e;r>0;r-=1)for(const e of t)yield e})},T=(t,e,r)=>{if(!o(t))throw new a(1,"Iterable.replace","Iterable");if(!n(e))throw new a(2,"Iterable.replace","number");if(e<0)throw new a(2,"Iterable.replace","positive number");return new R(function*(){let n=0;for(const i of t)n===e?yield r:yield i,n+=1})},$=t=>{if(!o(t))throw new a(1,"Iterable.reverse","Iterable");return new R(function*(){const e=[];for(const r of t)e.unshift(r);for(const t of e)yield t})},G=(t,e)=>{if(!o(t))throw new a(1,"Iterable.skip","Iterable");if(!n(e))throw new a(2,"Iterable.skip","number");if(e<0)throw new a(2,"Iterable.skip","positive number");return new R(function*(){let r=e;for(const e of t)r>0?r-=1:yield e})},j=(t,e)=>{if(!o(t))throw new a(1,"Iterable.skipLast","Iterable");if(!n(e))throw new a(2,"Iterable.skipLast","number");if(e<0)throw new a(2,"Iterable.skipLast","positive number");return new R(function*(){const r=[];let n=0;for(const i of t)e>0?(r.push(i),n===e?yield r.shift():n+=1):yield i})},F=(t,e)=>{if(!o(t))throw new a(1,"Iterable.skipUntil","Iterable");if(!r(e))throw new a(2,"Iterable.skipUntil","function");return new R(function*(){let r=!0;for(const n of t)r&&(r=e(n)),r||(yield n)})},P=(t,e)=>{if(!o(t))throw new a(1,"Iterable.takeWhile","Iterable");if(!r(e))throw new a(2,"Iterable.takeWhile","function");return new R(function*(){for(const r of t){if(!e(r))return;yield r}})},q=(t,e)=>{if(!o(t))throw new a(1,"Iterable.spanWith","Iterable");if(!r(e))throw new a(2,"Iterable.spanWith","function");return[P(t,e),F(t,e)]},B=(t,e)=>{if(!o(t))throw new a(1,"Iterable.take","Iterable");if(!n(e))throw new a(2,"Iterable.take","number");if(e<0)throw new a(2,"Iterable.take","positive number");return new R(function*(){let r=e;for(const e of t){if(!(r>0))return;r-=1,yield e}})},C=(t,e)=>{if(!o(t))throw new a(1,"Iterable.split","Iterable");if(!n(e))throw new a(2,"Iterable.split","number");if(e<0)throw new a(2,"Iterable.split","positive number");return[B(t,e),G(t,e)]},H=(t,...e)=>{if(!o(t))throw new a(1,"Iterable.startWith","Iterable");return I(...e,t)},J=(t,e)=>{if(!o(t))throw new a(1,"Iterable.takeLast","Iterable");if(!n(e))throw new a(2,"Iterable.takeLast","number");if(e<0)throw new a(2,"Iterable.takeLast","positive number");return new R(function*(){const r=[];for(const n of t)0===e?yield n:r.push(n);for(const t of r.slice(-e))yield t})},K=t=>t,Q=(t,n)=>{if(!(t instanceof Array))throw new a(1,"Iterable.zip","Array");let f=n;if(i(n))f=K;else if(!r(n))throw new a(2,"Iterable.zip","function or undefined");const l=t.length;return new R(function*(){const r=[];let n=l,i=0;for(const a of t)o(a)?r[i]=a[e]():n-=1,i+=1;for(;n>0;){const t=[];for(let e=0;e<l;e+=1){const i=r[e];if(void 0!==i){const{value:o,done:a}=i.next();t.push(o),a&&(r[e]=void 0,n-=1)}else t.push(void 0)}yield f(t)}})};class R{constructor(r){const n=r;if("GeneratorFunction"===n.constructor.name)n[e]=n,this.it=n;else{if(!o(n))throw new a(1,"Iterable.<constructor>","Iterable or Generator");this.it=n}return this.it=n,new Proxy(this,{get:(e,r)=>r in e?e[r]:t.isNumber(r)?e.get(r):void 0})}get(t){const{it:e}=this;let r=0;for(const n of e){if(r===t)return n;r+=1}}static is(t){return o(t)}static all(t,e){return f(t,e)}all(t){return f(this.it,t)}static any(t,e){return l(t,e)}any(t){return l(this.it,t)}static breakWith(t,e){return w(t,e)}breakWith(t){return w(this.it,t)}static cache(t){return c(t)}cache(){return c(this.it)}static compose(t,...e){return b(t,...e)}compose(...t){return b(this.it,...t)}static concat(...t){return I(...t)}concat(...t){return I(this.it,...t)}static contains(t,e){return m(t,e)}contains(t){return m(this.it,t)}static count(t){return k(t)}count(){return k(this.it)}static elementAt(t,e){return v(t,e)}elementAt(t){return v(this.it,t)}static empty(){return W()}static filter(t,e){return g(t,e)}filter(t){return g(this.it,t)}static find(t,e){return d(t,e)}find(t){return d(this.it,t)}static first(t){return L(t)}first(){return L(this.it)}static flat(t){return h(t)}flat(){return h(this.it)}static flatMap(t,e){return x(t,e)}flatMap(t){return x(this.it,t)}static buffer(t,e){return A(t,e)}buffer(t){return A(this.it,t)}static indexOf(t,e){return y(t,e)}indexOf(t){return y(this.it,t)}static isEmpty(t){return U(t)}isEmpty(){return U(this.it)}static just(t){return E(t)}static last(t){return M(t)}last(){return M(this.it)}static map(t,e){return p(t,e)}map(t){return p(this.it,t)}static onDone(t,e){return S(t,e)}onDone(t){return S(this.it,t)}static onStart(t,e){return z(t,e)}onStart(t){return z(this.it,t)}static onYield(t,e){return D(t,e)}onYield(t){return D(this.it,t)}static partition(t,e){return N(t,e)}partition(t){return N(this.it,t)}static range(t,e,r){return Y(t,e,r)}static repeat(t,e){return O(t,e)}repeat(t){return O(this.it,t)}static replace(t,e,r){return T(t,e,r)}replace(t,e){return T(this.it,t,e)}static reverse(t){return $(t)}reverse(){return $(this.it)}static skip(t,e){return G(t,e)}skip(t){return G(this.it,t)}static skipLast(t,e){return j(t,e)}skipLast(t){return j(this.it,t)}static skipWhile(t,e){return F(t,e)}skipWhile(t){return F(this.it,t)}static spanWith(t,e){return q(t,e)}spanWith(t){return q(this.it,t)}static split(t,e){return C(t,e)}split(t){return C(this.it,t)}static startWith(t,...e){return H(t,...e)}startWith(...t){return H(this.it,...t)}static take(t,e){return B(t,e)}take(t){return B(this.it,t)}static takeLast(t,e){return J(t,e)}takeLast(t){return J(this.it,t)}static takeWhile(t,e){return P(t,e)}takeWhile(t){return P(this.it,t)}static zip(t,e){return Q(t,e)}zip(t,e){return Q([this.it,...t],e)}[e](){return this.it[e]()}}return R}(util);