var Iterable=function(){"use strict";const t=Symbol.iterator,n=t=>"function"==typeof t,r=t=>null==t,e=e=>!r(e)&&n(e[t]);class i extends TypeError{constructor(t,n,r){super(),this.message=`bad argument #${t} to ${n} (${r} expected)`}}const s=(t,n,r)=>{if(!e(t))throw new i(n,r,"Iterable")},o=(t,r,e)=>{if(!n(t))throw new i(r,e,"function")},c=(t,n,r)=>{if(!(t=>"number"==typeof t)(t))throw new i(n,r,"number")},u=(t,n,r)=>{if(c(t,n,r),t<0)throw new i(n,r,"positive number")},a=(t,n,r)=>{s(t,1,r),o(n,2,r)},f=(t,n,r)=>{s(t,1,r),u(n,2,r)},l=(t,n,r)=>{s(t,1,r),s(n,2,r)},h=t=>`Iterable.${t}`,d=h("all");var y=(t,n)=>(a(t,n,d),new Kn(function*(){for(const r of t)if(!n(r))return void(yield!1);yield!0}));const v=h("any");var p=(t,n)=>(a(t,n,v),new Kn(function*(){for(const r of t)if(n(r))return void(yield!0);yield!1}));const w=h("average");var m=t=>(s(t,w),new Kn(function*(){let n=0,r=0;for(const e of t)n+=e,r+=1;yield n/r}));const k=h("breadthFirst");var g=t=>(s(t,1,k),new Kn(function*(){const n=[];for(n.push(t);0!==n.length;){const t=n.shift();if(e(t))for(const r of t)n.push(r);else yield t}}));const b=h("takeUntil");var W=(t,n)=>(a(t,n,b),new Kn(function*(){for(const r of t){if(n(r))return;yield r}}));const A=h("skipUntil");var x=(t,n)=>(a(t,n,A),new Kn(function*(){let r=!0;for(const e of t)r&&(r=!n(e)),r||(yield e)}));const E=h("breakWith");var I=(t,n)=>(a(t,n,E),[W(t,n),x(t,n)]);const J=h("buffer");var F=(t,n)=>(f(t,n,J),new Kn(function*(){let r=[];for(const e of t)r.push(e),r.length===n&&(yield r,r=[]);r.length>0&&(yield r)}));const M=h("cache");var L=t=>{s(t,1,M);const n=[];let r=0;return new Kn(function*(){if(r>0)for(const t of n)yield t;let e=r;for(const i of t)0===e?(n.push(i),r+=1,yield i):e-=1})};const R=h("compose");var U=(t,...n)=>{s(t,1,R);let r=1,i=t;for(const t of n)if(o(t,r+=1,R),i=t(i),!e(i))throw new TypeError("Iterable.compose: a composer function returned a non-Iterable.");return i instanceof Kn?i:new Kn(i)};const $=h("flat");var j=t=>(s(t,1,$),new Kn(function*(){for(const n of t)if(e(n))for(const t of n)yield t;else yield n})),S=(...t)=>j(new Kn(t));const q=h("flatMap");var z=(t,n)=>(a(t,n,q),new Kn(function*(){for(const r of t)yield n(r)}));const D=h("find");var N=(t,n)=>(a(t,n,D),new Kn(function*(){let r=0;for(const e of t){if(n(e))return void(yield r);r+=1}yield-1}));const O=h("indexOf");var Y=(t,n)=>(s(t,1,O),N(t,t=>t===n));const G=h("contains");var T=(t,n)=>(s(t,1,G),z(Y(t,n),t=>t>-1));const P=h("count");var B=t=>(s(t,1,P),new Kn(function*(){let n=0;for(const r of t)n+=1;yield n}));const C=h("defaultIfEmpty");var H=(t,n)=>(s(t,1,C),new Kn(function*(){let r=!0;for(const n of t)yield n,r=!1;r&&(yield n)}));const K=h("depthFirst");var Q=t=>(s(t,1,K),new Kn(function*(){const n=[];n.push(t);const r=[];for(;0!==n.length;){const t=n.pop();if(e(t))for(const r of t)n.push(r);else r.push(t)}for(const t of r.reverse())yield t}));const V=h("toArray");var X=t=>{s(t,1,V);const n=[];for(const r of t)n.push(r);return n};const Z=h("diff");var _=(t,n)=>(l(t,n,Z),new Kn(function*(){const r=X(t),e=X(n);for(const t of r)e.includes(t)||(yield t)}));const tt=h("distinct");var nt=t=>(s(t,1,tt),new Kn(function*(){const n=[];for(const r of t)n.includes(r)||(yield r),n.push(r)}));const rt=h("distinctAdjacent");var et=t=>(s(t,1,rt),new Kn(function*(){let n,r=!0;for(const e of t)r?(yield e,r=!1):n!==e&&(yield e),n=e}));const it=h("elementAt");var st=(t,n)=>(f(t,n,it),new Kn(function*(){let r=0;for(const e of t){if(r===n)return void(yield e);r+=1}}));let ot;var ct=()=>(r(ot)&&(ot=new Kn([])),ot);const ut=h("equal");var at=(t,n)=>(l(t,n,ut),new Kn(function*(){const r=X(t);for(const t of n)if(t!==r.shift())return void(yield!1);yield 0===r.length}));const ft=h("filter");var lt=(t,n)=>(a(t,n,ft),new Kn(function*(){for(const r of t)n(r)&&(yield r)}));const ht=h("first"),dt=()=>!0;var yt=(t,n)=>{s(t,1,ht);let e=n;return r(e)?e=dt:o(n,2,ht),new Kn(function*(){for(const n of t)if(e(n))return void(yield n)})};const vt=h("flatMap");var pt=(t,n)=>(a(t,n,vt),j(z(t,n)));const wt=h("reverse");var mt=t=>(s(t,1,wt),ct());const kt=h("innerJoin");var gt=(t,n)=>(l(t,n,kt),new Kn(function*(){const r=X(t),e=X(n);for(const t of r)e.includes(t)&&(yield t);for(const t of e)r.includes(t)&&(yield t)}));const bt=h("intercalate");var Wt=(t,n)=>(l(t,n,bt),new Kn(function*(){const r=[];let e;for(const i of t){r.push(i),e=r.slice(0);for(const t of n)r.push(t)}for(const t of e)yield t}));const At=h("intersect");var xt=(t,n)=>(l(t,n,At),new Kn(function*(){const r=X(t),e=X(n);for(const t of r)e.includes(t)&&(yield t)}));const Et=h("intersperse");var It=(t,n)=>(s(t,1,Et),new Kn(function*(){const r=[];let e;for(const i of t)r.push(i),e=r.slice(0),r.push(n);for(const t of e)yield t}));const Jt=h("isEmpty");var Ft=t=>(s(t,1,Jt),new Kn(function*(){for(const n of t)return void(yield!1);yield!0})),Mt=t=>new Kn([t]);const Lt=h("last"),Rt=()=>!0;var Ut=(t,n)=>{s(t,1,Lt);let e=n;return r(e)?e=Rt:o(n,2,Lt),new Kn(function*(){let n;for(const r of t)e(r)&&(n=r);yield n})};const $t=h("leftJoin");var jt=(t,n)=>(l(t,n,$t),new Kn(function*(){const r=X(t),e=X(n);for(const t of r)yield t;for(const t of e)r.includes(t)&&(yield t)}));const{max:St}=Math,qt=h("max");var zt=t=>(s(t,qt),new Kn(function*(){let n;for(const e of t)n=r(n)?e:St(n,e);yield n}));const{min:Dt}=Math,Nt=h("min");var Ot=t=>(s(t,Nt),new Kn(function*(){let n;for(const e of t)n=r(n)?e:Dt(n,e);yield n}));const Yt=h("onDone");var Gt=(t,n)=>(a(t,n,Yt),new Kn(function*(){for(const n of t)yield n;n()}));const Tt=h("onStart");var Pt=(t,n)=>(a(t,n,Tt),new Kn(function*(){n();for(const n of t)yield n}));const Bt=h("onYield");var Ct=(t,n)=>(a(t,n,Bt),new Kn(function*(){for(const r of t)n(r),yield r}));const Ht=h("outerJoin");var Kt=(t,n)=>(l(t,n,Ht),new Kn(function*(){const r=X(t),e=X(n);for(const t of r)e.includes(t)||(yield t);for(const t of e)r.includes(t)||(yield t)}));const Qt=h("partition");var Vt=(t,n)=>(a(t,n,Qt),[lt(t,n),lt(t,t=>!n(t))]);const Xt=h("range"),Zt=(t,n,e)=>{c(t,1,Xt),c(n,2,Xt);let i=e;return r(e)?i=1:c(e,3,Xt),new Kn(function*(){const r=i*Math.sign(n-t);for(let e=t;r<0?e>=n:e<=n;e+=r)yield e})},_t=h("reduce");var tn=(t,n,r)=>(a(t,n,_t),new Kn(function*(){let e=r,i=null==r;for(const r of t)i?(e=r,i=!1):e=n(e,r);yield e}));const nn=h("reverse");var rn=t=>(s(t,1,nn),new Kn(function*(){const n=[];for(const r of t)n.unshift(r);for(const t of n)yield t}));const en=h("reduceRight");var sn=(t,n,r)=>(a(t,n,en),tn(rn(t),n,r));const on=h("repeat");var cn=(t,n)=>(f(t,n,on),new Kn(function*(){for(let r=n;r>0;r-=1)for(const n of t)yield n}));const un=h("replace");var an=(t,n,r)=>(f(t,n,un),new Kn(function*(){let e=0;for(const i of t)e===n?yield r:yield i,e+=1}));const fn=h("scan");var ln=(t,n,r)=>(a(t,n,fn),new Kn(function*(){let e=r,i=null==r;for(const r of t)i?(e=r,i=!1):e=n(e,r),yield e}));const hn=h("scanRight");var dn=(t,n,r)=>(a(t,n,hn),ln(rn(t),n,r));const yn=h("skip");var vn=(t,n)=>(f(t,n,yn),new Kn(function*(){let r=n;for(const n of t)r>0?r-=1:yield n}));const pn=h("skipLast");var wn=(t,n)=>(f(t,n,pn),new Kn(function*(){const r=[];let e=0;for(const i of t)n>0?(r.push(i),e===n?yield r.shift():e+=1):yield i}));const mn=h("skipWhile");var kn=(t,n)=>(a(t,n,mn),new Kn(function*(){let r=!0;for(const e of t)r&&(r=n(e)),r||(yield e)}));const gn=h("take");var bn=(t,n)=>(f(t,n,gn),new Kn(function*(){let r=n;for(const n of t){if(!(r>0))return;r-=1,yield n}}));const Wn=h("slice");var An=(t,n,r)=>(s(t,1,Wn),u(n,2,Wn),u(r,3,Wn),vn(bn(t,r),n));const xn=h("sort"),En=(t,n)=>t-n;var In=(t,n)=>{s(t,1,xn);let e=n;return r(e)?e=En:o(n,2,xn),new Kn(X(t).sort(e))};const Jn=h("sorted"),Fn=(t,n)=>t-n;var Mn=(t,n)=>{s(t,1,Jn);let e=n;return r(e)?e=Fn:o(n,2,Jn),new Kn(function*(){let n;for(const r of t){if(void 0!==n&&e(n,r)>0)return void(yield!1);n=r}yield!0})};const Ln=h("takeWhile");var Rn=(t,n)=>(a(t,n,Ln),new Kn(function*(){for(const r of t){if(!n(r))return;yield r}}));const Un=h("spanWith");var $n=(t,n)=>(a(t,n,Un),[Rn(t,n),kn(t,n)]);const jn=h("split");var Sn=(t,n)=>(f(t,n,jn),[bn(t,n),vn(t,n)]);const qn=h("startWith");var zn=(t,...n)=>(s(t,1,qn),S(...n,t));const Dn=h("step");var Nn=(t,n)=>(f(t,n,Dn),new Kn(function*(){if(n<1)return;let r=0;for(const e of t)r%n==0&&(yield e),r+=1}));const On=h("sum");var Yn=t=>(s(t,On),new Kn(function*(){let n=0;for(const r of t)n+=r;yield n}));const Gn=h("takeLast");var Tn=(t,n)=>(f(t,n,Gn),new Kn(function*(){if(0===n)return;const r=[];for(const n of t)r.push(n);for(const t of r.slice(-n))yield t}));const Pn=h("zip"),Bn=t=>t,Cn=(t,e)=>{if(!(t instanceof Array))throw new i(1,Pn,"Array");let s=e;return r(e)?s=Bn:n(e)||o(e,2,Pn),new Kn(function*(){const n=[];for(const e of t){let t=0;for(const i of e){let e=n[t];r(e)&&(e=[],n[t]=e),e.push(i),t+=1}}for(const t of n)yield s(t)})},{isNaN:Hn}=Number;class Kn{constructor(n){const s=n,o=!r(s);if(o&&"GeneratorFunction"===s.constructor.name)s[t]=s,this.it=s;else{if(!o||!e(s))throw new i(1,"Iterable.<constructor>","Iterable or Generator");this.it=s}return this.it=s,new Proxy(this,{get:(t,n)=>n in t&&t[n]||(Hn(n)?void 0:this.get(n))})}get(t){const{it:n}=this;let r=0;for(const e of n){if(`${r}`===t)return e;r+=1}}static is(t){return e(t)}static all(t,n){return y(t,n)}all(t){return y(this.it,t)}static any(t,n){return p(t,n)}any(t){return p(this.it,t)}static average(t){return m(t)}average(){return m(this.it)}static breadthFirst(t){return g(t)}breadthFirst(){return g(this.it)}static buffer(t,n){return F(t,n)}buffer(t){return F(this.it,t)}static breakWith(t,n){return I(t,n)}breakWith(t){return I(this.it,t)}static cache(t){return L(t)}cache(){return L(this.it)}static compose(t,...n){return U(t,...n)}compose(...t){return U(this.it,...t)}static concat(...t){return S(...t)}concat(...t){return S(this.it,...t)}static contains(t,n){return T(t,n)}contains(t){return T(this.it,t)}static count(t){return B(t)}count(){return B(this.it)}static defaultIfEmpty(t,n){return H(t,n)}defaultIfEmpty(t){return H(this.it,t)}static depthFirst(t){return Q(t)}depthFirst(){return Q(this.it)}static diff(t,n){return _(t,n)}diff(t){return _(this.it,t)}static distinct(t){return nt(t)}distinct(){return nt(this.it)}static distinctAdjacent(t){return et(t)}distinctAdjacent(){return et(this.it)}static elementAt(t,n){return st(t,n)}elementAt(t){return st(this.it,t)}static empty(){return ct()}static equal(t,n){return at(t,n)}equal(t){return at(this.it,t)}static filter(t,n){return lt(t,n)}filter(t){return lt(this.it,t)}static find(t,n){return N(t,n)}find(t){return N(this.it,t)}static first(t,n){return yt(t,n)}first(t){return yt(this.it,t)}static flat(t){return j(t)}flat(){return j(this.it)}static flatMap(t,n){return pt(t,n)}flatMap(t){return pt(this.it,t)}static ignoreElements(t){return mt(t)}ignoreElements(){return mt(this.it)}static indexOf(t,n){return Y(t,n)}indexOf(t){return Y(this.it,t)}static innerJoin(t,n){return gt(t,n)}innerJoin(t){return gt(this.it,t)}static intercalate(t,n){return Wt(t,n)}intercalate(t){return Wt(this.it,t)}static intersect(t,n){return xt(t,n)}intersect(t){return xt(this.it,t)}static intersperse(t,n){return It(t,n)}intersperse(t){return It(this.it,t)}static isEmpty(t){return Ft(t)}isEmpty(){return Ft(this.it)}static just(t){return Mt(t)}static last(t,n){return Ut(t,n)}last(t){return Ut(this.it,t)}static leftJoin(t,n){return jt(t,n)}leftJoin(t){return jt(this.it,t)}static map(t,n){return z(t,n)}map(t){return z(this.it,t)}static max(t){return zt(t)}max(){return zt(this.it)}static min(t){return Ot(t)}min(){return Ot(this.it)}static onDone(t,n){return Gt(t,n)}onDone(t){return Gt(this.it,t)}static onStart(t,n){return Pt(t,n)}onStart(t){return Pt(this.it,t)}static onYield(t,n){return Ct(t,n)}onYield(t){return Ct(this.it,t)}static outerJoin(t,n){return Kt(t,n)}outerJoin(t){return Kt(this.it,t)}static partition(t,n){return Vt(t,n)}partition(t){return Vt(this.it,t)}static range(t,n,r){return Zt(t,n,r)}static reduce(t,n,r){return tn(t,n,r)}reduce(t,n){return tn(this.it,t,n)}static reduceRight(t,n,r){return sn(t,n,r)}reduceRight(t,n){return sn(this.it,t,n)}static repeat(t,n){return cn(t,n)}repeat(t){return cn(this.it,t)}static replace(t,n,r){return an(t,n,r)}replace(t,n){return an(this.it,t,n)}static reverse(t){return rn(t)}reverse(){return rn(this.it)}static scan(t,n,r){return ln(t,n,r)}scan(t,n){return ln(this.it,t,n)}static scanRight(t,n,r){return dn(t,n,r)}scanRight(t,n){return dn(this.it,t,n)}static skip(t,n){return vn(t,n)}skip(t){return vn(this.it,t)}static skipLast(t,n){return wn(t,n)}skipLast(t){return wn(this.it,t)}static skipUntil(t,n){return x(t,n)}skipUntil(t){return x(this.it,t)}static skipWhile(t,n){return kn(t,n)}skipWhile(t){return kn(this.it,t)}static slice(t,n,r){return An(t,n,r)}slice(t,n){return An(this.it,t,n)}static sort(t,n){return In(t,n)}sort(t){return In(this.it,t)}static sorted(t,n){return Mn(t,n)}sorted(t){return Mn(this.it,t)}static spanWith(t,n){return $n(t,n)}spanWith(t){return $n(this.it,t)}static split(t,n){return Sn(t,n)}split(t){return Sn(this.it,t)}static startWith(t,...n){return zn(t,...n)}startWith(...t){return zn(this.it,...t)}static step(t,n){return Nn(t,n)}step(t){return Nn(this.it,t)}static sum(t){return Yn(t)}sum(){return Yn(this.it)}static take(t,n){return bn(t,n)}take(t){return bn(this.it,t)}static takeLast(t,n){return Tn(t,n)}takeLast(t){return Tn(this.it,t)}static takeUntil(t,n){return W(t,n)}takeUntil(t){return W(this.it,t)}static takeWhile(t,n){return Rn(t,n)}takeWhile(t){return Rn(this.it,t)}static toArray(t){return X(t)}toArray(){return X(this.it)}static zip(t,n){return Cn(t,n)}zip(t,n){return Cn([this.it,...t],n)}[t](){return this.it[t]()}}return Kn}();